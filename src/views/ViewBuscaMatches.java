package views;

import controller.ServiceController;
import dto.PlacarDTO;
import dto.PowersOfPLayerFromMatchDTO;
import java.awt.Color;
import java.util.List;
import java.util.Objects;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import util.DateUtils;

/**
 *
 * @author Flavio Morais
 */
public class ViewBuscaMatches extends javax.swing.JFrame {

    ServiceController controller = new ServiceController();
    Integer idMatch = null;
    PlacarDTO dadosPlacar;
    String timeMatch;
    
    public ViewBuscaMatches() {
        initComponents();
        this.idMatch = controller.findLastMatchId();
        this.dadosPlacar = controller.findScoreByIdMatch(idMatch);
        this.timeMatch = controller.findTimeMatch(this.idMatch);
        this.setScoreAndPlayers(this.idMatch, this.dadosPlacar);
        this.configTables(tbPlayer1);
        this.configTables(tbPlayer2);
        this.fillTables(controller.findPowerStatsByMatch(this.idMatch));
        
        txtTemposPlayer1.setText(this.formatGoalTime(
                controller.findGoalTime(this.idMatch, this.dadosPlacar.getIdPlayer1())));
        txtTemposPlayer2.setText(this.formatGoalTime(
                controller.findGoalTime(this.idMatch, this.dadosPlacar.getIdPlayer2())));
        
        List<String> aux = controller.findAllIdMatches();
        cbPartida.setModel(new DefaultComboBoxModel<>(aux.toArray(new String[0])));
        cbPartida.setSelectedIndex(cbPartida.getItemCount() - 1);

        txtTimeMatch.setText(this.timeMatch);
    }
    
    private String formatGoalTime(List<String> times) {
        StringBuilder text = new StringBuilder("<html>");
        if (Objects.nonNull(times))
            for (String time : times) {
                time = DateUtils.getTimeFormatedPlacar(time);
                text.append(time).append("<br>");
            }
        text.append("</html>");
        return text.toString();
    }
    
    private void configTables(JTable table) {
        table.createDefaultColumnsFromModel();
        table.setBackground(new Color(0, 0, 0, 0));
    }
    
    private DefaultTableCellRenderer configColumnTable() {
        DefaultTableCellRenderer cv = new DefaultTableCellRenderer();
        cv.setHorizontalAlignment(JLabel.CENTER);
        cv.setVerticalAlignment(JLabel.CENTER);
        return cv;
    }
    
    private void fillTables(List<PowersOfPLayerFromMatchDTO> list) {
        int p1 = 0, p2 = 1;
        
        if ((Objects.nonNull(list.get(1).getIdPlayer())
                && list.get(1).getIdPlayer().equals(this.dadosPlacar.getIdPlayer1()))
                || (Objects.nonNull(list.get(0).getIdPlayer())
                && list.get(0).getIdPlayer().equals(this.dadosPlacar.getIdPlayer2()))) {
            p1 = 1;
            p2 = 0;
        }

        for (int column = 0; column < 4; column++) {
            tbPlayer1.getColumnModel().getColumn(column).setCellRenderer(configColumnTable());
            tbPlayer2.getColumnModel().getColumn(column).setCellRenderer(configColumnTable());
        }

        for (int line = 1; line < 12; line++) { // 1 a 11 para pegar os ids dos powers
            tbPlayer1.getModel().setValueAt(list.get(p1).getPowersFromMatch().get(line).getQtdCaught(), line-1, 3);
            tbPlayer1.getModel().setValueAt(list.get(p1).getPowersFromMatch().get(line).getQtdUsed(), line-1, 2);
            tbPlayer1.getModel().setValueAt(list.get(p1).getPowersFromMatch().get(line).getQtdSucess(), line-1, 1);
            tbPlayer1.getModel().setValueAt(list.get(p1).getPowersFromMatch().get(line).getQtdOwnGoal(), line-1, 0);
            
            tbPlayer2.getModel().setValueAt(list.get(p2).getPowersFromMatch().get(line).getQtdCaught(), line-1, 0);
            tbPlayer2.getModel().setValueAt(list.get(p2).getPowersFromMatch().get(line).getQtdUsed(), line-1, 1);
            tbPlayer2.getModel().setValueAt(list.get(p2).getPowersFromMatch().get(line).getQtdSucess(), line-1, 2);
            tbPlayer2.getModel().setValueAt(list.get(p2).getPowersFromMatch().get(line).getQtdOwnGoal(), line-1, 3);
        }
    }
    
    private void setScoreAndPlayers(int idMatch, PlacarDTO dados) {
        txtNamePlayer1.setText(dados.getNicknamePlayer1());
        txtNamePlayer2.setText(dados.getNicknamePlayer2());
        txtGolPlayer1.setText(String.valueOf(dados.getGolsPlayer1()));
        txtGolPlayer2.setText(String.valueOf(dados.getGolsPlayer2()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbPlayer2 = new javax.swing.JTable();
        tbPlayer1 = new javax.swing.JTable();
        btnVoltar = new javax.swing.JButton();
        btnTabela = new javax.swing.JButton();
        cbPartida = new javax.swing.JComboBox<>();
        txtTemposPlayer2 = new javax.swing.JLabel();
        txtTemposPlayer1 = new javax.swing.JLabel();
        txtGolPlayer2 = new javax.swing.JLabel();
        txtGolPlayer1 = new javax.swing.JLabel();
        txtNamePlayer2 = new javax.swing.JLabel();
        txtNamePlayer1 = new javax.swing.JLabel();
        txtTimeMatch = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(710, 590));
        setPreferredSize(new java.awt.Dimension(707, 590));
        setResizable(false);
        getContentPane().setLayout(null);

        tbPlayer2.setAutoCreateColumnsFromModel(false);
        tbPlayer2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        tbPlayer2.setForeground(new java.awt.Color(173, 83, 74));
        tbPlayer2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPlayer2.setOpaque(false);
        tbPlayer2.setRowHeight(36);
        tbPlayer2.setShowHorizontalLines(false);
        tbPlayer2.setShowVerticalLines(false);
        getContentPane().add(tbPlayer2);
        tbPlayer2.setBounds(380, 100, 140, 430);
        if (tbPlayer2.getColumnModel().getColumnCount() > 0) {
            tbPlayer2.getColumnModel().getColumn(0).setResizable(false);
            tbPlayer2.getColumnModel().getColumn(1).setResizable(false);
            tbPlayer2.getColumnModel().getColumn(2).setResizable(false);
            tbPlayer2.getColumnModel().getColumn(3).setResizable(false);
        }

        tbPlayer1.setAutoCreateColumnsFromModel(false);
        tbPlayer1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        tbPlayer1.setForeground(new java.awt.Color(173, 83, 74));
        tbPlayer1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPlayer1.setOpaque(false);
        tbPlayer1.setRowHeight(36);
        tbPlayer1.setShowHorizontalLines(false);
        tbPlayer1.setShowVerticalLines(false);
        getContentPane().add(tbPlayer1);
        tbPlayer1.setBounds(190, 100, 140, 430);
        if (tbPlayer1.getColumnModel().getColumnCount() > 0) {
            tbPlayer1.getColumnModel().getColumn(0).setResizable(false);
            tbPlayer1.getColumnModel().getColumn(1).setResizable(false);
            tbPlayer1.getColumnModel().getColumn(2).setResizable(false);
            tbPlayer1.getColumnModel().getColumn(3).setResizable(false);
        }

        btnVoltar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnVoltar.setBorderPainted(false);
        btnVoltar.setContentAreaFilled(false);
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVoltar);
        btnVoltar.setBounds(20, 510, 100, 40);

        btnTabela.setBorderPainted(false);
        btnTabela.setContentAreaFilled(false);
        btnTabela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(btnTabela);
        btnTabela.setBounds(590, 513, 100, 40);

        cbPartida.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbPartida.setForeground(new java.awt.Color(174, 81, 76));
        cbPartida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Partida 1" }));
        cbPartida.setMaximumSize(new java.awt.Dimension(120, 30));
        cbPartida.setMinimumSize(new java.awt.Dimension(120, 30));
        cbPartida.setPreferredSize(new java.awt.Dimension(120, 30));
        cbPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPartidaActionPerformed(evt);
            }
        });
        getContentPane().add(cbPartida);
        cbPartida.setBounds(296, 520, 120, 30);

        txtTemposPlayer2.setFont(new java.awt.Font("Trebuchet MS", 0, 22)); // NOI18N
        txtTemposPlayer2.setForeground(new java.awt.Color(173, 83, 74));
        txtTemposPlayer2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTemposPlayer2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(txtTemposPlayer2);
        txtTemposPlayer2.setBounds(570, 50, 120, 160);

        txtTemposPlayer1.setFont(new java.awt.Font("Trebuchet MS", 0, 22)); // NOI18N
        txtTemposPlayer1.setForeground(new java.awt.Color(173, 83, 74));
        txtTemposPlayer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTemposPlayer1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(txtTemposPlayer1);
        txtTemposPlayer1.setBounds(20, 50, 120, 160);

        txtGolPlayer2.setFont(new java.awt.Font("Tahoma", 1, 42)); // NOI18N
        txtGolPlayer2.setForeground(new java.awt.Color(173, 83, 74));
        txtGolPlayer2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(txtGolPlayer2);
        txtGolPlayer2.setBounds(380, 20, 50, 40);

        txtGolPlayer1.setFont(new java.awt.Font("Tahoma", 1, 42)); // NOI18N
        txtGolPlayer1.setForeground(new java.awt.Color(173, 83, 74));
        txtGolPlayer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(txtGolPlayer1);
        txtGolPlayer1.setBounds(280, 20, 50, 40);

        txtNamePlayer2.setFont(new java.awt.Font("Tahoma", 1, 42)); // NOI18N
        txtNamePlayer2.setForeground(new java.awt.Color(173, 83, 74));
        txtNamePlayer2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(txtNamePlayer2);
        txtNamePlayer2.setBounds(450, 20, 100, 40);

        txtNamePlayer1.setFont(new java.awt.Font("Tahoma", 1, 42)); // NOI18N
        txtNamePlayer1.setForeground(new java.awt.Color(173, 83, 74));
        txtNamePlayer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(txtNamePlayer1);
        txtNamePlayer1.setBounds(160, 20, 100, 40);

        txtTimeMatch.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        txtTimeMatch.setForeground(new java.awt.Color(173, 83, 74));
        txtTimeMatch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(txtTimeMatch);
        txtTimeMatch.setBounds(540, 450, 170, 40);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(173, 83, 74));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("<html>\n<p style=\"text-align:right;\">\n12<br>\n10<br>\n8<br>\n0\n</p>\n</html>");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(590, 270, 70, 90);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(173, 83, 74));
        jLabel5.setText("<html>\n<p style=\"text-align:left;\">\nPG:<br>\nUS:<br>\nSS:<br>\nGC:\n</p>\n</html>");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(590, 270, 70, 90);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(173, 83, 74));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("TOTAL");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(540, 220, 170, 40);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(173, 83, 74));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TOTAL");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 220, 170, 40);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(173, 83, 74));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tempo da partida");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(540, 430, 170, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/match_stats.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 711, 563);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPartidaActionPerformed
        this.idMatch = Integer.valueOf(cbPartida.getSelectedItem().toString());
        this.dadosPlacar = controller.findScoreByIdMatch(this.idMatch);
        this.timeMatch = controller.findTimeMatch(this.idMatch);
        
        this.fillTables(controller.findPowerStatsByMatch(this.idMatch));
        this.setScoreAndPlayers(idMatch, this.dadosPlacar);
        txtTemposPlayer1.setText(this.formatGoalTime(
                controller.findGoalTime(this.idMatch, this.dadosPlacar.getIdPlayer1())));
        txtTemposPlayer2.setText(this.formatGoalTime(
                controller.findGoalTime(this.idMatch, this.dadosPlacar.getIdPlayer2())));
        
        txtTimeMatch.setText(this.timeMatch);
    }//GEN-LAST:event_cbPartidaActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        new ViewPrincipal().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewBuscaMatches.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ViewBuscaMatches().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTabela;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cbPartida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTable tbPlayer1;
    private javax.swing.JTable tbPlayer2;
    private javax.swing.JLabel txtGolPlayer1;
    private javax.swing.JLabel txtGolPlayer2;
    private javax.swing.JLabel txtNamePlayer1;
    private javax.swing.JLabel txtNamePlayer2;
    private javax.swing.JLabel txtTemposPlayer1;
    private javax.swing.JLabel txtTemposPlayer2;
    private javax.swing.JLabel txtTimeMatch;
    // End of variables declaration//GEN-END:variables
}
